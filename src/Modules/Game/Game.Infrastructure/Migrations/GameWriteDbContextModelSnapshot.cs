// <auto-generated />
using System;
using Game.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Game.Infrastructure.Migrations
{
    [DbContext(typeof(GameWriteDbContext))]
    partial class GameWriteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Game")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Game.Domain.DomainModels.GameAggregate.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("CityImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<int>("DevelopmentLevel")
                        .HasColumnType("integer");

                    b.Property<bool>("HaveShield")
                        .HasColumnType("boolean");

                    b.Property<int>("Income")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAlive")
                        .HasColumnType("boolean");

                    b.Property<int>("LivingLevel")
                        .HasColumnType("integer");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities", "Game");
                });

            modelBuilder.Entity("Game.Domain.DomainModels.GameAggregate.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("Budget")
                        .HasColumnType("integer");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FlagImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("GameId")
                        .HasColumnType("uuid");

                    b.Property<bool>("HaveNuclearTechnology")
                        .HasColumnType("boolean");

                    b.Property<int>("LivingLevel")
                        .HasColumnType("integer");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NuclearTechnology")
                        .HasColumnType("integer");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uuid");

                    b.Property<int>("SanctionCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("RoomId");

                    b.ToTable("Countries", "Game");
                });

            modelBuilder.Entity("Game.Domain.DomainModels.GameAggregate.Entities.Game", b =>
                {
                    b.Property<Guid>("RoomId")
                        .HasColumnType("uuid");

                    b.Property<int>("CurrentRound")
                        .HasColumnType("integer");

                    b.Property<int>("EcologyLevel")
                        .HasColumnType("integer");

                    b.Property<string>("GameType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("HasTeams")
                        .HasColumnType("boolean");

                    b.HasKey("RoomId");

                    b.ToTable("Games", "Game");
                });

            modelBuilder.Entity("Game.Domain.DomainModels.RoomAggregate.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("CountryLimit")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 10, 31, 23, 24, 33, 111, DateTimeKind.Utc).AddTicks(9027));

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("GameType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("HasTeams")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("boolean");

                    b.Property<string>("RoomCode")
                        .HasColumnType("text");

                    b.Property<int>("RoomMemberLimit")
                        .HasColumnType("integer");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Rooms", "Game");
                });

            modelBuilder.Entity("Game.Domain.DomainModels.RoomAggregate.Entities.RoomMember", b =>
                {
                    b.Property<Guid>("GameUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<string>("GameRole")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfileImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RoomMemberRole")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.HasKey("GameUserId", "RoomId");

                    b.HasIndex("CountryId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomMembers", "Game");

                    b.HasDiscriminator<string>("RoomMemberRole").HasValue("RoomMember");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Game.Domain.DomainModels.UserAggregate.Entities.GameUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfileImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GameUsers", "Game");
                });

            modelBuilder.Entity("Game.Infrastructure.Seed.CityPattern", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("CityImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsCapital")
                        .HasColumnType("boolean");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("CityPatterns", "Game");

                    b.HasData(
                        new
                        {
                            Id = new Guid("263f0a8d-4fff-424a-a993-e772d0ca44a4"),
                            CityImagePath = "",
                            CityName = "Москва",
                            CountryId = new Guid("ae5723e6-6e33-4e9a-9dfe-09b1426fd2c4"),
                            IsCapital = true,
                            NormalizedName = "MOSCOW"
                        },
                        new
                        {
                            Id = new Guid("b9b6bb4d-33e2-4b66-be46-0a66e9402b99"),
                            CityImagePath = "",
                            CityName = "Санкт-Петербург",
                            CountryId = new Guid("ae5723e6-6e33-4e9a-9dfe-09b1426fd2c4"),
                            IsCapital = false,
                            NormalizedName = "SAINT PETERSBURG"
                        },
                        new
                        {
                            Id = new Guid("93c9fe83-b5cf-494c-bd4e-9a6359e90eb1"),
                            CityImagePath = "",
                            CityName = "Екатеринбург",
                            CountryId = new Guid("ae5723e6-6e33-4e9a-9dfe-09b1426fd2c4"),
                            IsCapital = false,
                            NormalizedName = "YEKATERINBURG"
                        },
                        new
                        {
                            Id = new Guid("412c512b-df3c-43c5-b6fd-896c49ffb546"),
                            CityImagePath = "",
                            CityName = "Новосибирск",
                            CountryId = new Guid("ae5723e6-6e33-4e9a-9dfe-09b1426fd2c4"),
                            IsCapital = false,
                            NormalizedName = "NOVOSIBIRSK"
                        },
                        new
                        {
                            Id = new Guid("2036ec04-7dab-41b5-8f13-5b8e7bd04b27"),
                            CityImagePath = "",
                            CityName = "Пекин",
                            CountryId = new Guid("48d6a5c3-5e84-4610-a5ff-1d1ddc5d687c"),
                            IsCapital = true,
                            NormalizedName = "BEIJING"
                        },
                        new
                        {
                            Id = new Guid("bfba911d-5d5e-484c-8466-03b0a213bd30"),
                            CityImagePath = "",
                            CityName = "Шанхай",
                            CountryId = new Guid("48d6a5c3-5e84-4610-a5ff-1d1ddc5d687c"),
                            IsCapital = false,
                            NormalizedName = "SHANGHAI"
                        },
                        new
                        {
                            Id = new Guid("6f830bfc-49f3-4112-9804-c987a6955a7c"),
                            CityImagePath = "",
                            CityName = "Чунцин",
                            CountryId = new Guid("48d6a5c3-5e84-4610-a5ff-1d1ddc5d687c"),
                            IsCapital = false,
                            NormalizedName = "CHONGQING"
                        },
                        new
                        {
                            Id = new Guid("ccae9dec-089b-4e01-b631-bfc00f1c3374"),
                            CityImagePath = "",
                            CityName = "Тяньцзинь",
                            CountryId = new Guid("48d6a5c3-5e84-4610-a5ff-1d1ddc5d687c"),
                            IsCapital = false,
                            NormalizedName = "TIANJIN"
                        },
                        new
                        {
                            Id = new Guid("d44f9746-24a2-4660-9cc6-7d512f737825"),
                            CityImagePath = "",
                            CityName = "Токио",
                            CountryId = new Guid("194c0be9-6a3f-4653-a85a-50516a0ba43e"),
                            IsCapital = true,
                            NormalizedName = "TOKYO"
                        },
                        new
                        {
                            Id = new Guid("88dcabb6-63fb-4238-8866-d2ad2cdb3528"),
                            CityImagePath = "",
                            CityName = "Йокогама",
                            CountryId = new Guid("194c0be9-6a3f-4653-a85a-50516a0ba43e"),
                            IsCapital = false,
                            NormalizedName = "YOKOHAMA"
                        },
                        new
                        {
                            Id = new Guid("2dde0c1d-a881-4519-988c-294646aff691"),
                            CityImagePath = "",
                            CityName = "Осака",
                            CountryId = new Guid("194c0be9-6a3f-4653-a85a-50516a0ba43e"),
                            IsCapital = false,
                            NormalizedName = "OSAKA"
                        },
                        new
                        {
                            Id = new Guid("8f46645e-8ad9-47a7-a1fe-938900ebb200"),
                            CityImagePath = "",
                            CityName = "Нагоя",
                            CountryId = new Guid("194c0be9-6a3f-4653-a85a-50516a0ba43e"),
                            IsCapital = false,
                            NormalizedName = "NAGOYA"
                        },
                        new
                        {
                            Id = new Guid("6acdd329-f2fd-4d26-acae-4adba762e239"),
                            CityImagePath = "",
                            CityName = "Берлин",
                            CountryId = new Guid("ac4e16af-cb7f-40c9-af46-6665b3359491"),
                            IsCapital = false,
                            NormalizedName = "BERLIN"
                        },
                        new
                        {
                            Id = new Guid("7efe12f3-d0a4-432f-8174-a1f579f65858"),
                            CityImagePath = "",
                            CityName = "Гамбург",
                            CountryId = new Guid("ac4e16af-cb7f-40c9-af46-6665b3359491"),
                            IsCapital = false,
                            NormalizedName = "HAMBURG"
                        },
                        new
                        {
                            Id = new Guid("5c5f67fa-548c-49e5-a84c-47cc1f49bc95"),
                            CityImagePath = "",
                            CityName = "Мюнхен",
                            CountryId = new Guid("ac4e16af-cb7f-40c9-af46-6665b3359491"),
                            IsCapital = false,
                            NormalizedName = "MUNICH"
                        },
                        new
                        {
                            Id = new Guid("6e6d8742-1770-4146-87d6-ee70f71fe39d"),
                            CityImagePath = "",
                            CityName = "Кёльн",
                            CountryId = new Guid("ac4e16af-cb7f-40c9-af46-6665b3359491"),
                            IsCapital = false,
                            NormalizedName = "COLOGNE"
                        },
                        new
                        {
                            Id = new Guid("1c86a420-e4e8-4e03-bd5c-126d6891cb42"),
                            CityImagePath = "",
                            CityName = "Париж",
                            CountryId = new Guid("85b97e85-6f42-4521-8d35-2075949a24f0"),
                            IsCapital = true,
                            NormalizedName = "PARIS"
                        },
                        new
                        {
                            Id = new Guid("8942ab63-f582-4636-824c-3b14415f1785"),
                            CityImagePath = "",
                            CityName = "Марсель",
                            CountryId = new Guid("85b97e85-6f42-4521-8d35-2075949a24f0"),
                            IsCapital = false,
                            NormalizedName = "MARSEILLE"
                        },
                        new
                        {
                            Id = new Guid("38b3ce62-2b81-43ff-903d-28fd95742642"),
                            CityImagePath = "",
                            CityName = "Лион",
                            CountryId = new Guid("85b97e85-6f42-4521-8d35-2075949a24f0"),
                            IsCapital = false,
                            NormalizedName = "LYON"
                        },
                        new
                        {
                            Id = new Guid("c9c09836-fe08-4185-85bb-88e202627ff3"),
                            CityImagePath = "",
                            CityName = "Тулуза",
                            CountryId = new Guid("85b97e85-6f42-4521-8d35-2075949a24f0"),
                            IsCapital = false,
                            NormalizedName = "TOULOUSE"
                        },
                        new
                        {
                            Id = new Guid("8958fa57-4714-4af5-8521-fe1d25b34be5"),
                            CityImagePath = "",
                            CityName = "Вашингтон",
                            CountryId = new Guid("1cc2c25e-6c4c-4631-a28a-e1e2428432ab"),
                            IsCapital = true,
                            NormalizedName = "WASHINGTON D.C."
                        },
                        new
                        {
                            Id = new Guid("04d33f39-fdf4-4e0f-a90b-5c80c091310a"),
                            CityImagePath = "",
                            CityName = "Нью-Йорк",
                            CountryId = new Guid("1cc2c25e-6c4c-4631-a28a-e1e2428432ab"),
                            IsCapital = false,
                            NormalizedName = "NEW YORK CITY"
                        },
                        new
                        {
                            Id = new Guid("30ec0ffd-dc91-45ec-a40e-77f8e4840655"),
                            CityImagePath = "",
                            CityName = "Лос-Анджелес",
                            CountryId = new Guid("1cc2c25e-6c4c-4631-a28a-e1e2428432ab"),
                            IsCapital = false,
                            NormalizedName = "LOS ANGELES"
                        },
                        new
                        {
                            Id = new Guid("31d1d007-26b8-414e-b3c5-d8e13e49b8ac"),
                            CityImagePath = "",
                            CityName = "Чикаго",
                            CountryId = new Guid("1cc2c25e-6c4c-4631-a28a-e1e2428432ab"),
                            IsCapital = false,
                            NormalizedName = "CHICAGO"
                        },
                        new
                        {
                            Id = new Guid("4b1dd7a6-505a-4576-82e8-97c8b2e76437"),
                            CityImagePath = "",
                            CityName = "Пхеньян",
                            CountryId = new Guid("6f6e916c-bb11-491b-885a-0d0b99a406d1"),
                            IsCapital = true,
                            NormalizedName = "PYONGYANG"
                        },
                        new
                        {
                            Id = new Guid("e60e723e-4d22-4327-a306-f687261ce721"),
                            CityImagePath = "",
                            CityName = "Хамхын",
                            CountryId = new Guid("6f6e916c-bb11-491b-885a-0d0b99a406d1"),
                            IsCapital = false,
                            NormalizedName = "HAMHUNG"
                        },
                        new
                        {
                            Id = new Guid("5f7cf8c5-f065-49a9-9ca5-5f7291a53e34"),
                            CityImagePath = "",
                            CityName = "Чхонджин",
                            CountryId = new Guid("6f6e916c-bb11-491b-885a-0d0b99a406d1"),
                            IsCapital = false,
                            NormalizedName = "CHONJIN"
                        },
                        new
                        {
                            Id = new Guid("3541a3e4-17d8-4b95-91a7-68a569e8d6a6"),
                            CityImagePath = "",
                            CityName = "Нампхо",
                            CountryId = new Guid("6f6e916c-bb11-491b-885a-0d0b99a406d1"),
                            IsCapital = false,
                            NormalizedName = "NAMPO"
                        },
                        new
                        {
                            Id = new Guid("678dd159-5eda-411f-b86c-5a6ddec1b5cc"),
                            CityImagePath = "",
                            CityName = "Тегеран",
                            CountryId = new Guid("a0415697-8c5c-4007-8dfd-07370817244b"),
                            IsCapital = true,
                            NormalizedName = "TEHRAN"
                        },
                        new
                        {
                            Id = new Guid("0facc903-954b-46f7-b532-97f5a6e1befd"),
                            CityImagePath = "",
                            CityName = "Мешхед",
                            CountryId = new Guid("a0415697-8c5c-4007-8dfd-07370817244b"),
                            IsCapital = false,
                            NormalizedName = "MASHHAD"
                        },
                        new
                        {
                            Id = new Guid("35be87f5-9ab4-4f50-ac3b-67bc5bd17321"),
                            CityImagePath = "",
                            CityName = "Исфахан",
                            CountryId = new Guid("a0415697-8c5c-4007-8dfd-07370817244b"),
                            IsCapital = false,
                            NormalizedName = "ISFAHAN"
                        },
                        new
                        {
                            Id = new Guid("9bbca6e2-65c5-494a-9e08-2921bb927eec"),
                            CityImagePath = "",
                            CityName = "Кередж",
                            CountryId = new Guid("a0415697-8c5c-4007-8dfd-07370817244b"),
                            IsCapital = false,
                            NormalizedName = "KARAJ"
                        },
                        new
                        {
                            Id = new Guid("874ebcd8-74ca-4af3-9abd-b598f0918226"),
                            CityImagePath = "",
                            CityName = "Гавана",
                            CountryId = new Guid("0479c8f0-2caa-4477-a075-5537f128a793"),
                            IsCapital = true,
                            NormalizedName = "HAVANA"
                        },
                        new
                        {
                            Id = new Guid("023cc663-b15d-4fba-be59-028032bc39d5"),
                            CityImagePath = "",
                            CityName = "Санктьяго-де-Куба",
                            CountryId = new Guid("0479c8f0-2caa-4477-a075-5537f128a793"),
                            IsCapital = false,
                            NormalizedName = "SANTIAGO DE CUBA"
                        },
                        new
                        {
                            Id = new Guid("997743e5-461a-48fd-8d3e-8511241a4621"),
                            CityImagePath = "",
                            CityName = "Камагуэй",
                            CountryId = new Guid("0479c8f0-2caa-4477-a075-5537f128a793"),
                            IsCapital = false,
                            NormalizedName = "CAMAGUEY"
                        },
                        new
                        {
                            Id = new Guid("2ccdb825-d899-4628-8a01-99b3ad2a0ff7"),
                            CityImagePath = "",
                            CityName = "Ольгин",
                            CountryId = new Guid("0479c8f0-2caa-4477-a075-5537f128a793"),
                            IsCapital = false,
                            NormalizedName = "OLGUIN"
                        },
                        new
                        {
                            Id = new Guid("4a3e3ea3-b8cb-45bf-a5a6-eb77d8cfe05b"),
                            CityImagePath = "",
                            CityName = "Канберра",
                            CountryId = new Guid("0798fcb2-df26-4dc3-8462-32d43aa98be0"),
                            IsCapital = true,
                            NormalizedName = "CANBERRA"
                        },
                        new
                        {
                            Id = new Guid("242fab1c-8c42-4b12-80c4-16c79a2fedbc"),
                            CityImagePath = "",
                            CityName = "Сидней",
                            CountryId = new Guid("0798fcb2-df26-4dc3-8462-32d43aa98be0"),
                            IsCapital = false,
                            NormalizedName = "SYDNEY"
                        },
                        new
                        {
                            Id = new Guid("fce5a7e3-870a-47a0-8ca9-8d19447ae94d"),
                            CityImagePath = "",
                            CityName = "Мельбурн",
                            CountryId = new Guid("0798fcb2-df26-4dc3-8462-32d43aa98be0"),
                            IsCapital = false,
                            NormalizedName = "MELBOURNE"
                        },
                        new
                        {
                            Id = new Guid("6ea629ee-f9fb-4428-948c-ab8185c8e799"),
                            CityImagePath = "",
                            CityName = "Брисбен",
                            CountryId = new Guid("0798fcb2-df26-4dc3-8462-32d43aa98be0"),
                            IsCapital = false,
                            NormalizedName = "BRISBANE"
                        },
                        new
                        {
                            Id = new Guid("c32d8379-4c49-4663-88e0-ee3faa3fef8d"),
                            CityImagePath = "",
                            CityName = "Кейптаун",
                            CountryId = new Guid("6f32b761-9e69-4c35-a316-4ee05216a684"),
                            IsCapital = true,
                            NormalizedName = "CAPE TOWN"
                        },
                        new
                        {
                            Id = new Guid("0b510311-586a-47e2-a4e3-3864297a9a4a"),
                            CityImagePath = "",
                            CityName = "Йоханнесбург",
                            CountryId = new Guid("6f32b761-9e69-4c35-a316-4ee05216a684"),
                            IsCapital = false,
                            NormalizedName = "JOHANNESBURG"
                        },
                        new
                        {
                            Id = new Guid("82f079d8-e91f-4a8a-8df5-a7ef2c5023f9"),
                            CityImagePath = "",
                            CityName = "Дурбан",
                            CountryId = new Guid("6f32b761-9e69-4c35-a316-4ee05216a684"),
                            IsCapital = false,
                            NormalizedName = "DURBAN"
                        },
                        new
                        {
                            Id = new Guid("d4f3e0ac-2e4c-4d90-9f2e-c0e4dbe3284c"),
                            CityImagePath = "",
                            CityName = "Претория",
                            CountryId = new Guid("6f32b761-9e69-4c35-a316-4ee05216a684"),
                            IsCapital = false,
                            NormalizedName = "PRETORIA"
                        });
                });

            modelBuilder.Entity("Game.Infrastructure.Seed.CountryPattern", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FlagImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CountryPatterns", "Game");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ae5723e6-6e33-4e9a-9dfe-09b1426fd2c4"),
                            CountryName = "Россия",
                            FlagImagePath = "",
                            NormalizedName = "RUSSIA"
                        },
                        new
                        {
                            Id = new Guid("48d6a5c3-5e84-4610-a5ff-1d1ddc5d687c"),
                            CountryName = "Китай",
                            FlagImagePath = "",
                            NormalizedName = "CHINA"
                        },
                        new
                        {
                            Id = new Guid("194c0be9-6a3f-4653-a85a-50516a0ba43e"),
                            CountryName = "Япония",
                            FlagImagePath = "",
                            NormalizedName = "JAPAN"
                        },
                        new
                        {
                            Id = new Guid("ac4e16af-cb7f-40c9-af46-6665b3359491"),
                            CountryName = "Германия",
                            FlagImagePath = "",
                            NormalizedName = "GERMANY"
                        },
                        new
                        {
                            Id = new Guid("85b97e85-6f42-4521-8d35-2075949a24f0"),
                            CountryName = "Франция",
                            FlagImagePath = "",
                            NormalizedName = "FRANCE"
                        },
                        new
                        {
                            Id = new Guid("1cc2c25e-6c4c-4631-a28a-e1e2428432ab"),
                            CountryName = "США",
                            FlagImagePath = "",
                            NormalizedName = "UNITED STATES"
                        },
                        new
                        {
                            Id = new Guid("6f6e916c-bb11-491b-885a-0d0b99a406d1"),
                            CountryName = "Северная Корея",
                            FlagImagePath = "",
                            NormalizedName = "NORTH KOREA"
                        },
                        new
                        {
                            Id = new Guid("a0415697-8c5c-4007-8dfd-07370817244b"),
                            CountryName = "Иран",
                            FlagImagePath = "",
                            NormalizedName = "IRAN"
                        },
                        new
                        {
                            Id = new Guid("0479c8f0-2caa-4477-a075-5537f128a793"),
                            CountryName = "Куба",
                            FlagImagePath = "",
                            NormalizedName = "CUBA"
                        },
                        new
                        {
                            Id = new Guid("0798fcb2-df26-4dc3-8462-32d43aa98be0"),
                            CountryName = "Австралия",
                            FlagImagePath = "",
                            NormalizedName = "AUSTRALIA"
                        },
                        new
                        {
                            Id = new Guid("6f32b761-9e69-4c35-a316-4ee05216a684"),
                            CountryName = "Южная Африка",
                            FlagImagePath = "",
                            NormalizedName = "SOUTH AFRICA"
                        });
                });

            modelBuilder.Entity("Game.Domain.DomainModels.RoomAggregate.Entities.Organizer", b =>
                {
                    b.HasBaseType("Game.Domain.DomainModels.RoomAggregate.Entities.RoomMember");

                    b.HasDiscriminator().HasValue("Organizer");
                });

            modelBuilder.Entity("Game.Domain.DomainModels.RoomAggregate.Entities.Player", b =>
                {
                    b.HasBaseType("Game.Domain.DomainModels.RoomAggregate.Entities.RoomMember");

                    b.HasDiscriminator().HasValue("Player");
                });

            modelBuilder.Entity("Game.Domain.DomainModels.GameAggregate.Entities.City", b =>
                {
                    b.HasOne("Game.Domain.DomainModels.GameAggregate.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Game.Domain.DomainModels.GameAggregate.Entities.Country", b =>
                {
                    b.HasOne("Game.Domain.DomainModels.GameAggregate.Entities.Game", "Game")
                        .WithMany("Countries")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Game.Domain.DomainModels.RoomAggregate.Entities.Room", "Room")
                        .WithMany("Countries")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Game.Domain.DomainModels.GameAggregate.Entities.Game", b =>
                {
                    b.HasOne("Game.Domain.DomainModels.RoomAggregate.Entities.Room", "Room")
                        .WithOne("DomainGame")
                        .HasForeignKey("Game.Domain.DomainModels.GameAggregate.Entities.Game", "RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Game.Domain.DomainModels.RoomAggregate.Entities.Room", b =>
                {
                    b.HasOne("Game.Domain.DomainModels.UserAggregate.Entities.GameUser", "Creator")
                        .WithMany("Rooms")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Game.Domain.DomainModels.RoomAggregate.Entities.RoomMember", b =>
                {
                    b.HasOne("Game.Domain.DomainModels.GameAggregate.Entities.Country", "Country")
                        .WithMany("Players")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Game.Domain.DomainModels.UserAggregate.Entities.GameUser", "GameUser")
                        .WithMany("CreatedMembers")
                        .HasForeignKey("GameUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Game.Domain.DomainModels.RoomAggregate.Entities.Room", "Room")
                        .WithMany("RoomMembers")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("GameUser");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Game.Infrastructure.Seed.CityPattern", b =>
                {
                    b.HasOne("Game.Infrastructure.Seed.CountryPattern", "CountryPattern")
                        .WithMany("CityPatterns")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountryPattern");
                });

            modelBuilder.Entity("Game.Domain.DomainModels.GameAggregate.Entities.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("Players");
                });

            modelBuilder.Entity("Game.Domain.DomainModels.GameAggregate.Entities.Game", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("Game.Domain.DomainModels.RoomAggregate.Entities.Room", b =>
                {
                    b.Navigation("Countries");

                    b.Navigation("DomainGame")
                        .IsRequired();

                    b.Navigation("RoomMembers");
                });

            modelBuilder.Entity("Game.Domain.DomainModels.UserAggregate.Entities.GameUser", b =>
                {
                    b.Navigation("CreatedMembers");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Game.Infrastructure.Seed.CountryPattern", b =>
                {
                    b.Navigation("CityPatterns");
                });
#pragma warning restore 612, 618
        }
    }
}
