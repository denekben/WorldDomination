// <auto-generated />
using System;
using Game.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Game.Infrastructure.Migrations
{
    [DbContext(typeof(GameWriteDbContext))]
    partial class GameWriteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Game")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Game.Domain.CountryAggregate.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("CityImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<int>("DevelopmentLevel")
                        .HasColumnType("integer");

                    b.Property<bool>("HaveShield")
                        .HasColumnType("boolean");

                    b.Property<int>("Income")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAlive")
                        .HasColumnType("boolean");

                    b.Property<int>("LivingLevel")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities", "Game");
                });

            modelBuilder.Entity("Game.Domain.CountryAggregate.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("Budget")
                        .HasColumnType("integer");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FlagImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<bool>("HaveNuclearTechnology")
                        .HasColumnType("boolean");

                    b.Property<int>("LivingLevel")
                        .HasColumnType("integer");

                    b.Property<int>("NuclearTechnology")
                        .HasColumnType("integer");

                    b.Property<int>("SanctionCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Countries", "Game");
                });

            modelBuilder.Entity("Game.Domain.GameAggregate.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("CurrentRound")
                        .HasColumnType("integer");

                    b.Property<int>("EcologyLevel")
                        .HasColumnType("integer");

                    b.Property<string>("GameType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoomId")
                        .IsUnique();

                    b.ToTable("Games", "Game");
                });

            modelBuilder.Entity("Game.Domain.RoomAggregate.Abstractions.RoomMember", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfileImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uuid");

                    b.Property<string>("RoomMemberRole")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomMembers", "Game");

                    b.HasDiscriminator<string>("RoomMemberRole").HasValue("RoomMember");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Game.Domain.RoomAggregate.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("CountryQuantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 10, 25, 20, 36, 17, 885, DateTimeKind.Utc).AddTicks(2162));

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("GameType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("boolean");

                    b.Property<string>("RoomCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoomMemberLimit")
                        .HasColumnType("integer");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Rooms", "Game");
                });

            modelBuilder.Entity("Game.Domain.UserAggregate.Entities.GameUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfileImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GameUsers", "Game");
                });

            modelBuilder.Entity("Game.Infrastructure.Seed.CityPattern", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("CityImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("CityPatterns", "Game");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ebc715d7-45ba-4318-8a5c-e98b82f7f1ee"),
                            CityImagePath = "",
                            CityName = "Москва",
                            CountryId = new Guid("b21c3b08-4eaf-48fa-bb91-b11af819558e")
                        },
                        new
                        {
                            Id = new Guid("2daf5654-6267-4650-9bb2-851e218252f2"),
                            CityImagePath = "",
                            CityName = "Санкт-Петербург",
                            CountryId = new Guid("b21c3b08-4eaf-48fa-bb91-b11af819558e")
                        },
                        new
                        {
                            Id = new Guid("41461c65-156f-42c6-a515-a95032df9c31"),
                            CityImagePath = "",
                            CityName = "Екатеринбург",
                            CountryId = new Guid("b21c3b08-4eaf-48fa-bb91-b11af819558e")
                        },
                        new
                        {
                            Id = new Guid("720c5844-15a6-45cc-9cf3-dc1c711b8059"),
                            CityImagePath = "",
                            CityName = "Новосибирск",
                            CountryId = new Guid("b21c3b08-4eaf-48fa-bb91-b11af819558e")
                        },
                        new
                        {
                            Id = new Guid("5131bb8e-c57b-47b7-8e7d-c08e497556df"),
                            CityImagePath = "",
                            CityName = "Пекин",
                            CountryId = new Guid("33cedfd6-2f81-4c55-b306-269cf8db2921")
                        },
                        new
                        {
                            Id = new Guid("55695aad-09d3-4027-a22b-d388f28737f6"),
                            CityImagePath = "",
                            CityName = "Шанхай",
                            CountryId = new Guid("33cedfd6-2f81-4c55-b306-269cf8db2921")
                        },
                        new
                        {
                            Id = new Guid("14af488a-0603-4844-8f3f-4971899912d4"),
                            CityImagePath = "",
                            CityName = "Чунцин",
                            CountryId = new Guid("33cedfd6-2f81-4c55-b306-269cf8db2921")
                        },
                        new
                        {
                            Id = new Guid("ec812c2b-f5d6-4bb6-8997-034020c3f8f2"),
                            CityImagePath = "",
                            CityName = "Тяньцзинь",
                            CountryId = new Guid("33cedfd6-2f81-4c55-b306-269cf8db2921")
                        },
                        new
                        {
                            Id = new Guid("921210e4-850f-4226-bd0e-0eead064c1fb"),
                            CityImagePath = "",
                            CityName = "Токио",
                            CountryId = new Guid("e5ac752f-307d-4440-9908-6f8212c3cdbf")
                        },
                        new
                        {
                            Id = new Guid("28816d25-7b69-4148-be64-0d60369dbeb5"),
                            CityImagePath = "",
                            CityName = "Йокогама",
                            CountryId = new Guid("e5ac752f-307d-4440-9908-6f8212c3cdbf")
                        },
                        new
                        {
                            Id = new Guid("c35cda50-96b4-4664-a757-8d81f6f98d0b"),
                            CityImagePath = "",
                            CityName = "Осака",
                            CountryId = new Guid("e5ac752f-307d-4440-9908-6f8212c3cdbf")
                        },
                        new
                        {
                            Id = new Guid("5787f307-9315-4731-ace4-10a01243d37c"),
                            CityImagePath = "",
                            CityName = "Нагоя",
                            CountryId = new Guid("e5ac752f-307d-4440-9908-6f8212c3cdbf")
                        },
                        new
                        {
                            Id = new Guid("47bc5911-6dff-4faa-bc45-d3b5af813890"),
                            CityImagePath = "",
                            CityName = "Берлин",
                            CountryId = new Guid("875e7a51-c5b2-48cd-a0e4-ad6ad9b776c5")
                        },
                        new
                        {
                            Id = new Guid("4389da51-334e-450e-9570-548c1d374ce6"),
                            CityImagePath = "",
                            CityName = "Гамбург",
                            CountryId = new Guid("875e7a51-c5b2-48cd-a0e4-ad6ad9b776c5")
                        },
                        new
                        {
                            Id = new Guid("cf11d6b6-2669-4e23-9e50-ab50ce518ffe"),
                            CityImagePath = "",
                            CityName = "Мюнхен",
                            CountryId = new Guid("875e7a51-c5b2-48cd-a0e4-ad6ad9b776c5")
                        },
                        new
                        {
                            Id = new Guid("3d91ae35-977c-4ea9-95ee-815d5eea03c4"),
                            CityImagePath = "",
                            CityName = "Кёльн",
                            CountryId = new Guid("875e7a51-c5b2-48cd-a0e4-ad6ad9b776c5")
                        },
                        new
                        {
                            Id = new Guid("9783c293-c568-40a2-82a9-ee67b0b120a7"),
                            CityImagePath = "",
                            CityName = "Париж",
                            CountryId = new Guid("19ee1048-02f5-40d2-9447-2083238fd993")
                        },
                        new
                        {
                            Id = new Guid("e1c79484-33bc-447f-9367-84d831e4177f"),
                            CityImagePath = "",
                            CityName = "Марсель",
                            CountryId = new Guid("19ee1048-02f5-40d2-9447-2083238fd993")
                        },
                        new
                        {
                            Id = new Guid("2f9ca9ce-a39c-4ff5-8471-76ec2cad317b"),
                            CityImagePath = "",
                            CityName = "Лион",
                            CountryId = new Guid("19ee1048-02f5-40d2-9447-2083238fd993")
                        },
                        new
                        {
                            Id = new Guid("71c2cd0a-15f7-49bb-9cd9-375e2849e5ed"),
                            CityImagePath = "",
                            CityName = "Тулуза",
                            CountryId = new Guid("19ee1048-02f5-40d2-9447-2083238fd993")
                        },
                        new
                        {
                            Id = new Guid("5dc51bae-fe15-45d7-b230-8dfac15150a6"),
                            CityImagePath = "",
                            CityName = "Вашингтон",
                            CountryId = new Guid("2e40ef1e-c71c-4332-9e81-d30835d53e11")
                        },
                        new
                        {
                            Id = new Guid("814daf02-ac4b-426d-8058-a84ffc7bb8d8"),
                            CityImagePath = "",
                            CityName = "Нью-Йорк",
                            CountryId = new Guid("2e40ef1e-c71c-4332-9e81-d30835d53e11")
                        },
                        new
                        {
                            Id = new Guid("81291e5d-7b8e-47f1-97e7-62db66faeb73"),
                            CityImagePath = "",
                            CityName = "Лос-Анджелес",
                            CountryId = new Guid("2e40ef1e-c71c-4332-9e81-d30835d53e11")
                        },
                        new
                        {
                            Id = new Guid("1305e8cd-6a4a-494c-bff3-7ec5001cf826"),
                            CityImagePath = "",
                            CityName = "Чикаго",
                            CountryId = new Guid("2e40ef1e-c71c-4332-9e81-d30835d53e11")
                        },
                        new
                        {
                            Id = new Guid("6b7f952e-ef92-470c-896f-c221a4cd530b"),
                            CityImagePath = "",
                            CityName = "Пхеньян",
                            CountryId = new Guid("7a9aebdc-e7b1-43b3-835d-3b82e234c49f")
                        },
                        new
                        {
                            Id = new Guid("93ef9d73-22a4-4569-a0fc-dd55f9137d63"),
                            CityImagePath = "",
                            CityName = "Хамхын",
                            CountryId = new Guid("7a9aebdc-e7b1-43b3-835d-3b82e234c49f")
                        },
                        new
                        {
                            Id = new Guid("781ce8a9-13a9-4b17-badb-36ea7822e62b"),
                            CityImagePath = "",
                            CityName = "Чхонджин",
                            CountryId = new Guid("7a9aebdc-e7b1-43b3-835d-3b82e234c49f")
                        },
                        new
                        {
                            Id = new Guid("e0afc709-6126-4c51-9f59-eacfe5f5ad64"),
                            CityImagePath = "",
                            CityName = "Нампхо",
                            CountryId = new Guid("7a9aebdc-e7b1-43b3-835d-3b82e234c49f")
                        },
                        new
                        {
                            Id = new Guid("9b0b51b7-1386-4ec1-8499-6abce5e0f0f6"),
                            CityImagePath = "",
                            CityName = "Тегеран",
                            CountryId = new Guid("c6fa0d7a-36bc-44c2-bb7e-1b1d026d2355")
                        },
                        new
                        {
                            Id = new Guid("f29a683a-5dfe-4d1a-9c47-3655e3f31d2f"),
                            CityImagePath = "",
                            CityName = "Мешхед",
                            CountryId = new Guid("c6fa0d7a-36bc-44c2-bb7e-1b1d026d2355")
                        },
                        new
                        {
                            Id = new Guid("b0c04272-98fa-4ea2-a150-04f0a6ad3c98"),
                            CityImagePath = "",
                            CityName = "Исфахан",
                            CountryId = new Guid("c6fa0d7a-36bc-44c2-bb7e-1b1d026d2355")
                        },
                        new
                        {
                            Id = new Guid("cf747b82-6483-4536-b248-9b3fc5bf3c12"),
                            CityImagePath = "",
                            CityName = "Кередж",
                            CountryId = new Guid("c6fa0d7a-36bc-44c2-bb7e-1b1d026d2355")
                        },
                        new
                        {
                            Id = new Guid("ce8fef66-4289-4182-b5b4-11ca9066b9b1"),
                            CityImagePath = "",
                            CityName = "Гавана",
                            CountryId = new Guid("592cdfe4-b207-4f81-bb3c-78c5aebfbf4a")
                        },
                        new
                        {
                            Id = new Guid("eae513cf-01e0-4783-af28-95f0fec70377"),
                            CityImagePath = "",
                            CityName = "Санктьяго-де-Куба",
                            CountryId = new Guid("592cdfe4-b207-4f81-bb3c-78c5aebfbf4a")
                        },
                        new
                        {
                            Id = new Guid("09d941c6-2296-403e-b8d1-0f85a0c8de77"),
                            CityImagePath = "",
                            CityName = "Камагуэй",
                            CountryId = new Guid("592cdfe4-b207-4f81-bb3c-78c5aebfbf4a")
                        },
                        new
                        {
                            Id = new Guid("890fb171-5863-4107-bd50-e3f2d217ffc9"),
                            CityImagePath = "",
                            CityName = "Ольгин",
                            CountryId = new Guid("592cdfe4-b207-4f81-bb3c-78c5aebfbf4a")
                        },
                        new
                        {
                            Id = new Guid("c4b3bbe7-0709-470f-93bf-34d1b1054ab1"),
                            CityImagePath = "",
                            CityName = "Канберра",
                            CountryId = new Guid("58329df2-da01-46f5-b1cd-73e8ab7c8515")
                        },
                        new
                        {
                            Id = new Guid("31be4ca4-6bb7-436b-b4be-61a70eb91ac9"),
                            CityImagePath = "",
                            CityName = "Сидней",
                            CountryId = new Guid("58329df2-da01-46f5-b1cd-73e8ab7c8515")
                        },
                        new
                        {
                            Id = new Guid("7efa60a8-f18d-4029-9b42-8fa84f7a8044"),
                            CityImagePath = "",
                            CityName = "Мельбурн",
                            CountryId = new Guid("58329df2-da01-46f5-b1cd-73e8ab7c8515")
                        },
                        new
                        {
                            Id = new Guid("ed47facd-90a5-41e9-bf4b-207f8a19e8a0"),
                            CityImagePath = "",
                            CityName = "Брисбен",
                            CountryId = new Guid("58329df2-da01-46f5-b1cd-73e8ab7c8515")
                        },
                        new
                        {
                            Id = new Guid("ce4406b2-1e9f-4e6a-82ec-58dd4f1a8ee4"),
                            CityImagePath = "",
                            CityName = "Кейптаун",
                            CountryId = new Guid("f2f5b102-a83a-46a4-a674-d5f7b018dec7")
                        },
                        new
                        {
                            Id = new Guid("bfee2fef-c600-4f4a-aeb5-142cfb8fb7d7"),
                            CityImagePath = "",
                            CityName = "Йоханнесбург",
                            CountryId = new Guid("f2f5b102-a83a-46a4-a674-d5f7b018dec7")
                        },
                        new
                        {
                            Id = new Guid("59637a08-21f9-413a-a15d-5549dc4f636e"),
                            CityImagePath = "",
                            CityName = "Дурбан",
                            CountryId = new Guid("f2f5b102-a83a-46a4-a674-d5f7b018dec7")
                        },
                        new
                        {
                            Id = new Guid("ab1cf4ec-651d-461c-9fe5-26f90c4b3db7"),
                            CityImagePath = "",
                            CityName = "Претория",
                            CountryId = new Guid("f2f5b102-a83a-46a4-a674-d5f7b018dec7")
                        });
                });

            modelBuilder.Entity("Game.Infrastructure.Seed.CountryPattern", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FlagImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CountryPatterns", "Game");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b21c3b08-4eaf-48fa-bb91-b11af819558e"),
                            CountryName = "Россия",
                            FlagImagePath = ""
                        },
                        new
                        {
                            Id = new Guid("33cedfd6-2f81-4c55-b306-269cf8db2921"),
                            CountryName = "Китай",
                            FlagImagePath = ""
                        },
                        new
                        {
                            Id = new Guid("e5ac752f-307d-4440-9908-6f8212c3cdbf"),
                            CountryName = "Япония",
                            FlagImagePath = ""
                        },
                        new
                        {
                            Id = new Guid("875e7a51-c5b2-48cd-a0e4-ad6ad9b776c5"),
                            CountryName = "Германия",
                            FlagImagePath = ""
                        },
                        new
                        {
                            Id = new Guid("19ee1048-02f5-40d2-9447-2083238fd993"),
                            CountryName = "Франция",
                            FlagImagePath = ""
                        },
                        new
                        {
                            Id = new Guid("2e40ef1e-c71c-4332-9e81-d30835d53e11"),
                            CountryName = "США",
                            FlagImagePath = ""
                        },
                        new
                        {
                            Id = new Guid("7a9aebdc-e7b1-43b3-835d-3b82e234c49f"),
                            CountryName = "Северная Корея",
                            FlagImagePath = ""
                        },
                        new
                        {
                            Id = new Guid("c6fa0d7a-36bc-44c2-bb7e-1b1d026d2355"),
                            CountryName = "Иран",
                            FlagImagePath = ""
                        },
                        new
                        {
                            Id = new Guid("592cdfe4-b207-4f81-bb3c-78c5aebfbf4a"),
                            CountryName = "Куба",
                            FlagImagePath = ""
                        },
                        new
                        {
                            Id = new Guid("58329df2-da01-46f5-b1cd-73e8ab7c8515"),
                            CountryName = "Австралия",
                            FlagImagePath = ""
                        },
                        new
                        {
                            Id = new Guid("f2f5b102-a83a-46a4-a674-d5f7b018dec7"),
                            CountryName = "Южная Африка",
                            FlagImagePath = ""
                        });
                });

            modelBuilder.Entity("Game.Domain.RoomAggregate.Entities.Organizer", b =>
                {
                    b.HasBaseType("Game.Domain.RoomAggregate.Abstractions.RoomMember");

                    b.HasDiscriminator().HasValue("Organizer");
                });

            modelBuilder.Entity("Game.Domain.RoomAggregate.Entities.Player", b =>
                {
                    b.HasBaseType("Game.Domain.RoomAggregate.Abstractions.RoomMember");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<string>("GameRole")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasIndex("CountryId");

                    b.HasDiscriminator().HasValue("Player");
                });

            modelBuilder.Entity("Game.Domain.CountryAggregate.Entities.City", b =>
                {
                    b.HasOne("Game.Domain.CountryAggregate.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Game.Domain.CountryAggregate.Entities.Country", b =>
                {
                    b.HasOne("Game.Domain.GameAggregate.Entities.Game", "Game")
                        .WithMany("Countries")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Game.Domain.GameAggregate.Entities.Game", b =>
                {
                    b.HasOne("Game.Domain.RoomAggregate.Entities.Room", "Room")
                        .WithOne("DomainGame")
                        .HasForeignKey("Game.Domain.GameAggregate.Entities.Game", "RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Game.Domain.RoomAggregate.Abstractions.RoomMember", b =>
                {
                    b.HasOne("Game.Domain.RoomAggregate.Entities.Room", "Room")
                        .WithMany("RoomMembers")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Game.Domain.RoomAggregate.Entities.Room", b =>
                {
                    b.HasOne("Game.Domain.UserAggregate.Entities.GameUser", "Creator")
                        .WithMany("Rooms")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Game.Infrastructure.Seed.CityPattern", b =>
                {
                    b.HasOne("Game.Infrastructure.Seed.CountryPattern", "CountryPattern")
                        .WithMany("CityPatterns")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountryPattern");
                });

            modelBuilder.Entity("Game.Domain.RoomAggregate.Entities.Player", b =>
                {
                    b.HasOne("Game.Domain.CountryAggregate.Entities.Country", "Country")
                        .WithMany("Players")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Game.Domain.CountryAggregate.Entities.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("Players");
                });

            modelBuilder.Entity("Game.Domain.GameAggregate.Entities.Game", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("Game.Domain.RoomAggregate.Entities.Room", b =>
                {
                    b.Navigation("DomainGame")
                        .IsRequired();

                    b.Navigation("RoomMembers");
                });

            modelBuilder.Entity("Game.Domain.UserAggregate.Entities.GameUser", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Game.Infrastructure.Seed.CountryPattern", b =>
                {
                    b.Navigation("CityPatterns");
                });
#pragma warning restore 612, 618
        }
    }
}
