// <auto-generated />
using System;
using Game.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Game.Infrastructure.Migrations
{
    [DbContext(typeof(GameWriteDbContext))]
    partial class GameWriteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Game")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Game.Domain.CountryAggregate.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("CityImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<int>("DevelopmentLevel")
                        .HasColumnType("integer");

                    b.Property<bool>("HaveShield")
                        .HasColumnType("boolean");

                    b.Property<int>("Income")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAlive")
                        .HasColumnType("boolean");

                    b.Property<int>("LivingLevel")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities", "Game");
                });

            modelBuilder.Entity("Game.Domain.CountryAggregate.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("Budget")
                        .HasColumnType("integer");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FlagImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<bool>("HaveNuclearTechnology")
                        .HasColumnType("boolean");

                    b.Property<int>("LivingLevel")
                        .HasColumnType("integer");

                    b.Property<int>("NuclearTechnology")
                        .HasColumnType("integer");

                    b.Property<int>("SanctionCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Countries", "Game");
                });

            modelBuilder.Entity("Game.Domain.DomainModels.RoomAggregate.Abstractions.RoomMember", b =>
                {
                    b.Property<Guid>("GameUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<string>("GameRole")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfileImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RoomMemberRole")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.HasKey("GameUserId", "RoomId");

                    b.HasIndex("CountryId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomMembers", "Game");

                    b.HasDiscriminator<string>("RoomMemberRole").HasValue("RoomMember");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Game.Domain.GameAggregate.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("CurrentRound")
                        .HasColumnType("integer");

                    b.Property<int>("EcologyLevel")
                        .HasColumnType("integer");

                    b.Property<string>("GameType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoomId")
                        .IsUnique();

                    b.ToTable("Games", "Game");
                });

            modelBuilder.Entity("Game.Domain.RoomAggregate.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("CountryQuantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2024, 10, 29, 12, 31, 14, 868, DateTimeKind.Utc).AddTicks(1845));

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("GameType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("boolean");

                    b.Property<string>("RoomCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoomMemberLimit")
                        .HasColumnType("integer");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Rooms", "Game");
                });

            modelBuilder.Entity("Game.Domain.UserAggregate.Entities.GameUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfileImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GameUsers", "Game");
                });

            modelBuilder.Entity("Game.Infrastructure.Seed.CityPattern", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("CityImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("CityPatterns", "Game");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6cff118d-23bc-4e5d-b433-b5d3d65d51d3"),
                            CityImagePath = "",
                            CityName = "Москва",
                            CountryId = new Guid("f2e5b4f3-d37b-4354-8e9d-14f0616c2e87")
                        },
                        new
                        {
                            Id = new Guid("35732768-d2f8-4949-9cc4-1ff13a22bd5a"),
                            CityImagePath = "",
                            CityName = "Санкт-Петербург",
                            CountryId = new Guid("f2e5b4f3-d37b-4354-8e9d-14f0616c2e87")
                        },
                        new
                        {
                            Id = new Guid("7db32f17-b8c3-4b84-823a-66ce90704f45"),
                            CityImagePath = "",
                            CityName = "Екатеринбург",
                            CountryId = new Guid("f2e5b4f3-d37b-4354-8e9d-14f0616c2e87")
                        },
                        new
                        {
                            Id = new Guid("08a0aa28-6a6a-405e-aed6-1d283103ce33"),
                            CityImagePath = "",
                            CityName = "Новосибирск",
                            CountryId = new Guid("f2e5b4f3-d37b-4354-8e9d-14f0616c2e87")
                        },
                        new
                        {
                            Id = new Guid("1f0a2d29-8e82-4ccb-bd86-df4f17e159fd"),
                            CityImagePath = "",
                            CityName = "Пекин",
                            CountryId = new Guid("46e7f08f-7a10-4113-a04c-5ed1fdab5462")
                        },
                        new
                        {
                            Id = new Guid("922ae8af-8b85-4e6b-9d6c-20b6b4cc5ba0"),
                            CityImagePath = "",
                            CityName = "Шанхай",
                            CountryId = new Guid("46e7f08f-7a10-4113-a04c-5ed1fdab5462")
                        },
                        new
                        {
                            Id = new Guid("edfd1ca7-3afc-4b98-9398-3a5bddcb2241"),
                            CityImagePath = "",
                            CityName = "Чунцин",
                            CountryId = new Guid("46e7f08f-7a10-4113-a04c-5ed1fdab5462")
                        },
                        new
                        {
                            Id = new Guid("ad15369a-9bbb-45e8-a0ce-021c05b5a546"),
                            CityImagePath = "",
                            CityName = "Тяньцзинь",
                            CountryId = new Guid("46e7f08f-7a10-4113-a04c-5ed1fdab5462")
                        },
                        new
                        {
                            Id = new Guid("8263b844-ca53-4d3a-944c-c6f459244c09"),
                            CityImagePath = "",
                            CityName = "Токио",
                            CountryId = new Guid("24691a70-c8ef-431b-bcc5-cc24e5b1d106")
                        },
                        new
                        {
                            Id = new Guid("8106cdec-1dfb-4e5d-9953-e8827816b31c"),
                            CityImagePath = "",
                            CityName = "Йокогама",
                            CountryId = new Guid("24691a70-c8ef-431b-bcc5-cc24e5b1d106")
                        },
                        new
                        {
                            Id = new Guid("551e15d3-969d-425d-9fcc-f5c6c6b77eaa"),
                            CityImagePath = "",
                            CityName = "Осака",
                            CountryId = new Guid("24691a70-c8ef-431b-bcc5-cc24e5b1d106")
                        },
                        new
                        {
                            Id = new Guid("eaedb9eb-98c7-4adf-90b0-b4bae5a0374c"),
                            CityImagePath = "",
                            CityName = "Нагоя",
                            CountryId = new Guid("24691a70-c8ef-431b-bcc5-cc24e5b1d106")
                        },
                        new
                        {
                            Id = new Guid("0f6ec8bd-d7bf-40aa-a808-a9b3d96a58f3"),
                            CityImagePath = "",
                            CityName = "Берлин",
                            CountryId = new Guid("074cbd39-72be-4e83-89f7-e6e51296d178")
                        },
                        new
                        {
                            Id = new Guid("c8208bd9-f147-4d85-80d8-22fde413ae03"),
                            CityImagePath = "",
                            CityName = "Гамбург",
                            CountryId = new Guid("074cbd39-72be-4e83-89f7-e6e51296d178")
                        },
                        new
                        {
                            Id = new Guid("2f1bbffb-3304-44a0-b36f-fbc32f071d62"),
                            CityImagePath = "",
                            CityName = "Мюнхен",
                            CountryId = new Guid("074cbd39-72be-4e83-89f7-e6e51296d178")
                        },
                        new
                        {
                            Id = new Guid("6699724a-0c69-4ac1-b695-2b6ee36cd557"),
                            CityImagePath = "",
                            CityName = "Кёльн",
                            CountryId = new Guid("074cbd39-72be-4e83-89f7-e6e51296d178")
                        },
                        new
                        {
                            Id = new Guid("c6eb130b-870c-478b-bac0-ac74d07b62c4"),
                            CityImagePath = "",
                            CityName = "Париж",
                            CountryId = new Guid("643ab2d6-141d-4057-b429-f37de825a0f7")
                        },
                        new
                        {
                            Id = new Guid("6b439105-5111-41c9-87b9-e6507457f27a"),
                            CityImagePath = "",
                            CityName = "Марсель",
                            CountryId = new Guid("643ab2d6-141d-4057-b429-f37de825a0f7")
                        },
                        new
                        {
                            Id = new Guid("99fc3d69-9b66-491d-ad19-aedfe1c32cf1"),
                            CityImagePath = "",
                            CityName = "Лион",
                            CountryId = new Guid("643ab2d6-141d-4057-b429-f37de825a0f7")
                        },
                        new
                        {
                            Id = new Guid("d8e89406-bfde-4c18-a8e1-17d6546a8744"),
                            CityImagePath = "",
                            CityName = "Тулуза",
                            CountryId = new Guid("643ab2d6-141d-4057-b429-f37de825a0f7")
                        },
                        new
                        {
                            Id = new Guid("8e3917a5-e3a0-4c7e-962a-a69d643eec76"),
                            CityImagePath = "",
                            CityName = "Вашингтон",
                            CountryId = new Guid("eceb8a54-5060-477d-8698-d81b32cef044")
                        },
                        new
                        {
                            Id = new Guid("b4c91a53-eee7-4b4a-a54d-96df9ff1e49c"),
                            CityImagePath = "",
                            CityName = "Нью-Йорк",
                            CountryId = new Guid("eceb8a54-5060-477d-8698-d81b32cef044")
                        },
                        new
                        {
                            Id = new Guid("febadf7b-937f-4d8e-ab1e-e0739a3e4cac"),
                            CityImagePath = "",
                            CityName = "Лос-Анджелес",
                            CountryId = new Guid("eceb8a54-5060-477d-8698-d81b32cef044")
                        },
                        new
                        {
                            Id = new Guid("5de2b177-b192-4161-8067-78f084468d6d"),
                            CityImagePath = "",
                            CityName = "Чикаго",
                            CountryId = new Guid("eceb8a54-5060-477d-8698-d81b32cef044")
                        },
                        new
                        {
                            Id = new Guid("f38d9ee1-31dc-4d38-ac21-a0d3f4465914"),
                            CityImagePath = "",
                            CityName = "Пхеньян",
                            CountryId = new Guid("fa9c178c-817d-4730-ac8e-a0debb1c2ef0")
                        },
                        new
                        {
                            Id = new Guid("ebf1700b-8efb-4d31-92ef-b28ec189dc58"),
                            CityImagePath = "",
                            CityName = "Хамхын",
                            CountryId = new Guid("fa9c178c-817d-4730-ac8e-a0debb1c2ef0")
                        },
                        new
                        {
                            Id = new Guid("1f329bd1-7a31-4e0d-afea-2af1f0cea8fa"),
                            CityImagePath = "",
                            CityName = "Чхонджин",
                            CountryId = new Guid("fa9c178c-817d-4730-ac8e-a0debb1c2ef0")
                        },
                        new
                        {
                            Id = new Guid("a32c3f7c-2ced-403f-b151-c6f69c1bb9b6"),
                            CityImagePath = "",
                            CityName = "Нампхо",
                            CountryId = new Guid("fa9c178c-817d-4730-ac8e-a0debb1c2ef0")
                        },
                        new
                        {
                            Id = new Guid("2a44ec69-48d8-4fce-8e32-b6d3ef7eab9f"),
                            CityImagePath = "",
                            CityName = "Тегеран",
                            CountryId = new Guid("e25e46ed-623a-418d-9a20-52b624602b6c")
                        },
                        new
                        {
                            Id = new Guid("0ac08c48-b4c2-4590-b0ce-d345f4019512"),
                            CityImagePath = "",
                            CityName = "Мешхед",
                            CountryId = new Guid("e25e46ed-623a-418d-9a20-52b624602b6c")
                        },
                        new
                        {
                            Id = new Guid("d81d3c64-becb-479d-915f-3141c8100ee7"),
                            CityImagePath = "",
                            CityName = "Исфахан",
                            CountryId = new Guid("e25e46ed-623a-418d-9a20-52b624602b6c")
                        },
                        new
                        {
                            Id = new Guid("5d030ce5-950e-4b56-81e6-7d6f44e6f798"),
                            CityImagePath = "",
                            CityName = "Кередж",
                            CountryId = new Guid("e25e46ed-623a-418d-9a20-52b624602b6c")
                        },
                        new
                        {
                            Id = new Guid("93c5273a-e257-4c1e-a027-aa23dac50267"),
                            CityImagePath = "",
                            CityName = "Гавана",
                            CountryId = new Guid("6da48a27-aa52-4f41-adb4-843bc6431bf9")
                        },
                        new
                        {
                            Id = new Guid("f0da611b-6e60-4e0b-9e36-230abba3a0de"),
                            CityImagePath = "",
                            CityName = "Санктьяго-де-Куба",
                            CountryId = new Guid("6da48a27-aa52-4f41-adb4-843bc6431bf9")
                        },
                        new
                        {
                            Id = new Guid("f987c5ce-a1e9-48dc-a6a3-201cb371043e"),
                            CityImagePath = "",
                            CityName = "Камагуэй",
                            CountryId = new Guid("6da48a27-aa52-4f41-adb4-843bc6431bf9")
                        },
                        new
                        {
                            Id = new Guid("fbea6ee5-8d97-47b3-86ef-f4b818b93a51"),
                            CityImagePath = "",
                            CityName = "Ольгин",
                            CountryId = new Guid("6da48a27-aa52-4f41-adb4-843bc6431bf9")
                        },
                        new
                        {
                            Id = new Guid("30a43945-1d2d-4b9b-ae3f-6c8ae289bcad"),
                            CityImagePath = "",
                            CityName = "Канберра",
                            CountryId = new Guid("586fe6e6-070d-4879-98f0-a73a27f14c7f")
                        },
                        new
                        {
                            Id = new Guid("418cf8a7-1dc8-4028-806c-8756fec997f9"),
                            CityImagePath = "",
                            CityName = "Сидней",
                            CountryId = new Guid("586fe6e6-070d-4879-98f0-a73a27f14c7f")
                        },
                        new
                        {
                            Id = new Guid("40a3f5a0-05bc-4de4-a070-db5ba9ed15bb"),
                            CityImagePath = "",
                            CityName = "Мельбурн",
                            CountryId = new Guid("586fe6e6-070d-4879-98f0-a73a27f14c7f")
                        },
                        new
                        {
                            Id = new Guid("deb75679-616e-4fc6-b985-c1f636652d9c"),
                            CityImagePath = "",
                            CityName = "Брисбен",
                            CountryId = new Guid("586fe6e6-070d-4879-98f0-a73a27f14c7f")
                        },
                        new
                        {
                            Id = new Guid("b149ac02-b833-442d-a824-2be95a6b7103"),
                            CityImagePath = "",
                            CityName = "Кейптаун",
                            CountryId = new Guid("871ca2b4-cdf2-4926-8701-da445c1a3826")
                        },
                        new
                        {
                            Id = new Guid("17848519-0f15-4314-8c72-a7b753c768a5"),
                            CityImagePath = "",
                            CityName = "Йоханнесбург",
                            CountryId = new Guid("871ca2b4-cdf2-4926-8701-da445c1a3826")
                        },
                        new
                        {
                            Id = new Guid("062a9155-81bd-4d83-9c57-7c71b1f45bfa"),
                            CityImagePath = "",
                            CityName = "Дурбан",
                            CountryId = new Guid("871ca2b4-cdf2-4926-8701-da445c1a3826")
                        },
                        new
                        {
                            Id = new Guid("340bbfe2-3240-4075-9fe6-d266e7ee5f96"),
                            CityImagePath = "",
                            CityName = "Претория",
                            CountryId = new Guid("871ca2b4-cdf2-4926-8701-da445c1a3826")
                        });
                });

            modelBuilder.Entity("Game.Infrastructure.Seed.CountryPattern", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FlagImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CountryPatterns", "Game");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f2e5b4f3-d37b-4354-8e9d-14f0616c2e87"),
                            CountryName = "Россия",
                            FlagImagePath = ""
                        },
                        new
                        {
                            Id = new Guid("46e7f08f-7a10-4113-a04c-5ed1fdab5462"),
                            CountryName = "Китай",
                            FlagImagePath = ""
                        },
                        new
                        {
                            Id = new Guid("24691a70-c8ef-431b-bcc5-cc24e5b1d106"),
                            CountryName = "Япония",
                            FlagImagePath = ""
                        },
                        new
                        {
                            Id = new Guid("074cbd39-72be-4e83-89f7-e6e51296d178"),
                            CountryName = "Германия",
                            FlagImagePath = ""
                        },
                        new
                        {
                            Id = new Guid("643ab2d6-141d-4057-b429-f37de825a0f7"),
                            CountryName = "Франция",
                            FlagImagePath = ""
                        },
                        new
                        {
                            Id = new Guid("eceb8a54-5060-477d-8698-d81b32cef044"),
                            CountryName = "США",
                            FlagImagePath = ""
                        },
                        new
                        {
                            Id = new Guid("fa9c178c-817d-4730-ac8e-a0debb1c2ef0"),
                            CountryName = "Северная Корея",
                            FlagImagePath = ""
                        },
                        new
                        {
                            Id = new Guid("e25e46ed-623a-418d-9a20-52b624602b6c"),
                            CountryName = "Иран",
                            FlagImagePath = ""
                        },
                        new
                        {
                            Id = new Guid("6da48a27-aa52-4f41-adb4-843bc6431bf9"),
                            CountryName = "Куба",
                            FlagImagePath = ""
                        },
                        new
                        {
                            Id = new Guid("586fe6e6-070d-4879-98f0-a73a27f14c7f"),
                            CountryName = "Австралия",
                            FlagImagePath = ""
                        },
                        new
                        {
                            Id = new Guid("871ca2b4-cdf2-4926-8701-da445c1a3826"),
                            CountryName = "Южная Африка",
                            FlagImagePath = ""
                        });
                });

            modelBuilder.Entity("Game.Domain.RoomAggregate.Entities.Organizer", b =>
                {
                    b.HasBaseType("Game.Domain.DomainModels.RoomAggregate.Abstractions.RoomMember");

                    b.HasDiscriminator().HasValue("Organizer");
                });

            modelBuilder.Entity("Game.Domain.RoomAggregate.Entities.Player", b =>
                {
                    b.HasBaseType("Game.Domain.DomainModels.RoomAggregate.Abstractions.RoomMember");

                    b.HasDiscriminator().HasValue("Player");
                });

            modelBuilder.Entity("Game.Domain.CountryAggregate.Entities.City", b =>
                {
                    b.HasOne("Game.Domain.CountryAggregate.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Game.Domain.CountryAggregate.Entities.Country", b =>
                {
                    b.HasOne("Game.Domain.GameAggregate.Entities.Game", "Game")
                        .WithMany("Countries")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Game.Domain.DomainModels.RoomAggregate.Abstractions.RoomMember", b =>
                {
                    b.HasOne("Game.Domain.CountryAggregate.Entities.Country", "Country")
                        .WithMany("Players")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Game.Domain.UserAggregate.Entities.GameUser", "GameUser")
                        .WithMany("CreatedMembers")
                        .HasForeignKey("GameUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Game.Domain.RoomAggregate.Entities.Room", "Room")
                        .WithMany("RoomMembers")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("GameUser");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Game.Domain.GameAggregate.Entities.Game", b =>
                {
                    b.HasOne("Game.Domain.RoomAggregate.Entities.Room", "Room")
                        .WithOne("DomainGame")
                        .HasForeignKey("Game.Domain.GameAggregate.Entities.Game", "RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Game.Domain.RoomAggregate.Entities.Room", b =>
                {
                    b.HasOne("Game.Domain.UserAggregate.Entities.GameUser", "Creator")
                        .WithMany("Rooms")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Game.Infrastructure.Seed.CityPattern", b =>
                {
                    b.HasOne("Game.Infrastructure.Seed.CountryPattern", "CountryPattern")
                        .WithMany("CityPatterns")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountryPattern");
                });

            modelBuilder.Entity("Game.Domain.CountryAggregate.Entities.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("Players");
                });

            modelBuilder.Entity("Game.Domain.GameAggregate.Entities.Game", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("Game.Domain.RoomAggregate.Entities.Room", b =>
                {
                    b.Navigation("DomainGame")
                        .IsRequired();

                    b.Navigation("RoomMembers");
                });

            modelBuilder.Entity("Game.Domain.UserAggregate.Entities.GameUser", b =>
                {
                    b.Navigation("CreatedMembers");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Game.Infrastructure.Seed.CountryPattern", b =>
                {
                    b.Navigation("CityPatterns");
                });
#pragma warning restore 612, 618
        }
    }
}
